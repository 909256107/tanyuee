package com.itdfq.qianduan.controller;

import com.github.pagehelper.PageInfo;
import com.itdfq.qianduan.model.Equipment;
import com.itdfq.qianduan.service.EquipmentService;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import java.util.HashMap;
import java.util.Map;

/**
 * Created by DFQ on 2020/10/11 16:18
 */
@RestController
@RequestMapping("/equip")
public class EquipmentController {

    @Autowired
    private EquipmentService equipmentService;

    Map<String,Object> map = new HashMap<>();
    @RequestMapping("/findByPage")
    @ApiOperation("分页查询")
    public PageInfo<Equipment> findByPage(@ApiParam("页号") @RequestParam(defaultValue = "1") Integer pageNum,
                                          @ApiParam("每页大小") @RequestParam(defaultValue = "15") Integer pageSize) {

        return equipmentService.findByPage(pageNum, pageSize);
    }
    @ApiOperation("条件查询")
    @RequestMapping("/findByName")
    public PageInfo<Equipment> findByName(@ApiParam("页号") @RequestParam(defaultValue = "1") Integer pageNum,
                                    @ApiParam("每页大小") @RequestParam(defaultValue = "15") Integer pageSize,@RequestBody Equipment equipment) {
        //System.out.println(datas);
//        System.out.println(datasService.findByTJ(pageNum,pageSize,datas,startTime,endTime));
        return equipmentService.findByName(pageNum,pageSize,equipment);
    }
    @RequestMapping("/insert")
    public Map<String,Object> insert( @RequestBody Equipment equipment){
        map.clear();
        try {
            equipmentService.insert(equipment);
            map.put("msg",1);
        } catch (Exception e) {
            e.printStackTrace();
            map.put("msg",e.getMessage());
        }
        return map;
    }
    @RequestMapping("/update")
    public Map<String,Object> update(@RequestBody Equipment equipment){
        map.clear();
        try {
            equipmentService.update(equipment);
            map.put("msg",1);
        } catch (Exception e) {
            e.printStackTrace();
            map.put("msg",e.getMessage());
        }
        return map;
    }
    @RequestMapping("/delete")
    public Map<String,Object> delete(@RequestBody Equipment equipment){
        map.clear();
        try {
            equipmentService.deleteById(equipment);
            map.put("msg",1);
        } catch (Exception e) {
            e.printStackTrace();
            map.put("msg",e.getMessage());
        }
        return map;
    }

}
